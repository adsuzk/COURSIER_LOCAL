<?php
/**
 * ============================================================================
 * ü§ñ INTELLIGENCE ARTIFICIELLE CHAT SUZOSKY
 * ============================================================================
 * 
 * Syst√®me d'IA avanc√© pour le chat support avec reconnaissance d'intention
 * et cr√©ation automatique de r√©clamations
 * 
 * @version 1.0.0
 * @author √âquipe Suzosky  
 * @date 25 septembre 2025
 * ============================================================================
 */

class SuzoskyChatAI {
    private $pdo;
    private $intentions;
    private $motsCles;
    
    public function __construct($pdo) {
        $this->pdo = $pdo;
        $this->initializeAI();
    }
    
    /**
     * Initialisation de l'IA avec les intentions et mots-cl√©s
     */
    private function initializeAI() {
        // Intentions d√©tect√©es par l'IA
        $this->intentions = [
            'reclamation' => [
                'confidence' => 0,
                'mots_cles' => [
                    'r√©clamation', 'reclamation', 'plainte', 'probl√®me', 'souci', 
                    'erreur', 'bug', 'dysfonctionnement', 'incident', 'd√©faillance',
                    'm√©contentement', 'insatisfaction', 'remboursement', 'compensation',
                    'litige', 'diff√©rend', 'contestation'
                ],
                'reponse' => 'ü§ñ Je comprends que vous souhaitez faire une r√©clamation. Je vais vous aider √† d√©crire pr√©cis√©ment votre probl√®me pour qu\'il soit trait√© rapidement par notre √©quipe.'
            ],
            'information' => [
                'confidence' => 0,
                'mots_cles' => [
                    'information', 'renseignement', 'question', 'aide', 'comment',
                    'pourquoi', 'quand', 'o√π', 'combien', 'tarif', 'prix', 'horaires'
                ],
                'reponse' => 'ü§ñ Je suis l√† pour vous renseigner ! Posez-moi votre question et je ferai de mon mieux pour vous aider.'
            ],
            'commande' => [
                'confidence' => 0,
                'mots_cles' => [
                    'commande', 'livraison', 'coursier', 'd√©lai', 'retard', 'statut',
                    'suivi', 'tracking', 'num√©ro', 'transaction'
                ],
                'reponse' => 'ü§ñ Je peux vous aider avec votre commande. Avez-vous le num√©ro de transaction pour que je puisse v√©rifier le statut ?'
            ],
            'salutation' => [
                'confidence' => 0,
                'mots_cles' => [
                    'bonjour', 'bonsoir', 'salut', 'hello', 'hey', 'coucou'
                ],
                'reponse' => 'ü§ñ Bonjour ! Bienvenue sur le support Suzosky. Comment puis-je vous aider aujourd\'hui ?'
            ]
        ];
    }
    
    /**
     * Analyse d'un message et d√©tection d'intention
     */
    public function analyzeMessage($message) {
        $message = strtolower(trim($message));
        $intentions_detectees = [];
        
        foreach ($this->intentions as $type => $intention) {
            $confidence = 0;
            
            foreach ($intention['mots_cles'] as $mot_cle) {
                if (strpos($message, strtolower($mot_cle)) !== false) {
                    $confidence += 1;
                }
            }
            
            // Calcul du pourcentage de confiance
            $confidence_percentage = ($confidence / count($intention['mots_cles'])) * 100;
            
            if ($confidence_percentage > 0) {
                $intentions_detectees[$type] = [
                    'confidence' => $confidence_percentage,
                    'reponse' => $intention['reponse']
                ];
            }
        }
        
        // Trier par confiance d√©croissante
        arsort($intentions_detectees);
        
        return [
            'message_original' => $message,
            'intentions' => $intentions_detectees,
            'intention_principale' => !empty($intentions_detectees) ? array_keys($intentions_detectees)[0] : 'unknown'
        ];
    }
    
    /**
     * G√©n√©ration de r√©ponse intelligente
     */
    public function generateResponse($analysis) {
        if (empty($analysis['intentions'])) {
            return [
                'type' => 'default',
                'message' => 'ü§ñ Je suis votre assistant virtuel Suzosky. Je peux vous aider avec vos commandes, r√©pondre √† vos questions ou traiter vos r√©clamations. Comment puis-je vous assister ?',
                'actions' => ['general_help']
            ];
        }
        
        $intention_principale = $analysis['intention_principale'];
        $reponse = $analysis['intentions'][$intention_principale]['reponse'];
        
        switch ($intention_principale) {
            case 'reclamation':
                return [
                    'type' => 'reclamation',
                    'message' => $reponse,
                    'actions' => ['start_complaint_process'],
                    'next_step' => 'ask_transaction_number'
                ];
                
            case 'commande':
                return [
                    'type' => 'commande',
                    'message' => $reponse,
                    'actions' => ['track_order'],
                    'next_step' => 'ask_transaction_number'
                ];
                
            default:
                return [
                    'type' => $intention_principale,
                    'message' => $reponse,
                    'actions' => ['continue_conversation']
                ];
        }
    }
    
    /**
     * Processus guid√© pour les r√©clamations
     */
    public function processComplaintWorkflow($step, $data) {
        switch ($step) {
            case 'ask_transaction_number':
                return [
                    'message' => 'ü§ñ Pour traiter votre r√©clamation efficacement, j\'ai besoin de votre num√©ro de transaction. Pouvez-vous me le communiquer ?',
                    'input_type' => 'text',
                    'validation' => 'transaction_number',
                    'next_step' => 'ask_problem_type'
                ];
                
            case 'ask_problem_type':
                return [
                    'message' => 'ü§ñ Merci ! Maintenant, quel type de probl√®me rencontrez-vous ?',
                    'input_type' => 'select',
                    'options' => [
                        'commande' => 'Probl√®me avec ma commande',
                        'livraison' => 'Probl√®me de livraison',
                        'paiement' => 'Probl√®me de paiement',
                        'coursier' => 'Probl√®me avec le coursier',
                        'technique' => 'Probl√®me technique',
                        'autre' => 'Autre probl√®me'
                    ],
                    'next_step' => 'ask_description'
                ];
                
            case 'ask_description':
                return [
                    'message' => 'ü§ñ Parfait ! Pouvez-vous maintenant d√©crire pr√©cis√©ment votre probl√®me ? Plus vous serez pr√©cis, plus nous pourrons vous aider rapidement.',
                    'input_type' => 'textarea',
                    'next_step' => 'ask_screenshot'
                ];
                
            case 'ask_screenshot':
                return [
                    'message' => 'ü§ñ Avez-vous une capture d\'√©cran ou un document √† joindre pour illustrer votre probl√®me ?',
                    'input_type' => 'file',
                    'optional' => true,
                    'next_step' => 'create_complaint'
                ];
                
            case 'create_complaint':
                return $this->createComplaint($data);
        }
    }
    
    /**
     * Cr√©ation d'une r√©clamation
     */
    public function createComplaint($data) {
        try {
            $stmt = $this->pdo->prepare("
                INSERT INTO reclamations (
                    numero_transaction, client_id, guest_id, type_reclamation, 
                    sujet, description, capture_ecran, metadata
                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            ");
            
            $metadata = json_encode([
                'created_by_ai' => true,
                'ai_confidence' => $data['ai_confidence'] ?? 0,
                'user_agent' => $_SERVER['HTTP_USER_AGENT'] ?? '',
                'ip_address' => $_SERVER['REMOTE_ADDR'] ?? '',
                'chat_session_id' => $data['chat_session_id'] ?? null
            ]);
            
            $stmt->execute([
                $data['numero_transaction'],
                $data['client_id'] ?? null,
                $data['guest_id'] ?? null,
                $data['type_reclamation'],
                $this->generateComplaintTitle($data['type_reclamation'], $data['numero_transaction']),
                $data['description'],
                $data['capture_ecran'] ?? null,
                $metadata
            ]);
            
            $complaint_id = $this->pdo->lastInsertId();
            
            return [
                'success' => true,
                'complaint_id' => $complaint_id,
                'message' => "ü§ñ Parfait ! Votre r√©clamation #$complaint_id a √©t√© cr√©√©e et transmise √† notre √©quipe. Vous recevrez une r√©ponse dans les plus brefs d√©lais. Y a-t-il autre chose que je puisse faire pour vous ?",
                'actions' => ['complaint_created']
            ];
            
        } catch (Exception $e) {
            return [
                'success' => false,
                'message' => 'ü§ñ Une erreur est survenue lors de la cr√©ation de votre r√©clamation. Veuillez r√©essayer ou contacter directement notre support.',
                'error' => $e->getMessage()
            ];
        }
    }
    
    /**
     * G√©n√©ration automatique du titre de r√©clamation
     */
    private function generateComplaintTitle($type, $transaction) {
        $titles = [
            'commande' => "Probl√®me commande - Transaction $transaction",
            'livraison' => "Incident livraison - Transaction $transaction", 
            'paiement' => "Probl√®me paiement - Transaction $transaction",
            'coursier' => "Probl√®me coursier - Transaction $transaction",
            'technique' => "Probl√®me technique - Transaction $transaction",
            'autre' => "R√©clamation - Transaction $transaction"
        ];
        
        return $titles[$type] ?? "R√©clamation - Transaction $transaction";
    }
    
    /**
     * Validation des donn√©es
     */
    public function validateTransactionNumber($number) {
        // V√©rifier le format du num√©ro de transaction
        if (!preg_match('/^[A-Z0-9]{8,20}$/', strtoupper($number))) {
            return [
                'valid' => false,
                'message' => 'ü§ñ Le format du num√©ro de transaction ne semble pas correct. Il doit contenir entre 8 et 20 caract√®res alphanum√©riques.'
            ];
        }
        
        // V√©rifier si la transaction existe
        $stmt = $this->pdo->prepare("SELECT id FROM commandes WHERE numero_commande = ?");
        $stmt->execute([strtoupper($number)]);
        
        if ($stmt->rowCount() === 0) {
            return [
                'valid' => false,
                'message' => 'ü§ñ Je ne trouve pas cette transaction dans notre syst√®me. V√©rifiez le num√©ro ou contactez notre support si vous √™tes certain qu\'il est correct.'
            ];
        }
        
        return [
            'valid' => true,
            'message' => 'ü§ñ Transaction trouv√©e ! Je peux maintenant traiter votre r√©clamation.'
        ];
    }
}